#ifndef _IMG_
#define _IMG_

#define Pixel_schema(X,Y,...) \
    enum_value_v(X,Y, none,            0) \
    enum_value_v(X,Y, rgba8,           1) \
    enum_value_v(X,Y, rgb8,            2) \
    enum_value_v(X,Y, rgbf32,          3) \
    enum_value_v(X,Y, u8,              4) \
    enum_value_v(X,Y, rgbaf32,         5) \
    enum_value_v(X,Y, f32,             6)
declare_enum(Pixel)

// a good idea is to make this more of 'ANY' ability of filter
// if filter set to an object, that object could dictate more filter arguments for a general purpose filter
// this is something used by the system
#define Filter_schema(X,Y,...) \
    enum_value_v(X,Y, none,            0) \
    enum_value_v(X,Y, nearest,         1) \
    enum_value_v(X,Y, bilinear,        3) \
    enum_value_v(X,Y, trilinear,       4) \
    enum_value_v(X,Y, low,             5) \
    enum_value_v(X,Y, med,             6) \
    enum_value_v(X,Y, high,            7)
declare_enum(Filter)

#define Surface_schema(X,Y,...) \
    enum_value_v_2(X,Y, none,           0, Zero) \
    enum_value_v_2(X,Y, color,          1, Four) \
    enum_value_v_2(X,Y, normal,         2, Four) \
    enum_value_v_2(X,Y, emission,       3, Four) \
    enum_value_v_2(X,Y, rough,          4, One) \
    enum_value_v_2(X,Y, metal,          5, One) \
    enum_value_v_2(X,Y, height,         6, One) \
    enum_value_v_2(X,Y, ao,             7, One) \
    enum_value_v_2(X,Y, ior,            8, One) \
    enum_value_v_2(X,Y, environment,    9, Four)
declare_enum(Surface)

#define image_schema(X,Y,...) \
    i_ctr     (X,Y,    public,     string) \
    i_ctr     (X,Y,    public,     symbol) \
    i_ctr     (X,Y,    public,     cstr) \
    i_prop    (X,Y,    public,     path,                   uri) \
    i_prop    (X,Y,    public,     Surface,                surface) \
    i_prop    (X,Y,    public,     Pixel,                  format) \
    i_prop    (X,Y,    public,     i32,                    pixel_size) \
    i_prop    (X,Y,    public,     i32,                    width) \
    i_prop    (X,Y,    public,     i32,                    height) \
    i_prop    (X,Y,    public,     i32,                    channels) \
    i_prop    (X,Y,    public,     object,                 source) \
    i_prop    (X,Y,    public,     Filter,                 filter) \
    i_prop    (X,Y,    public,     object,                 user) \
    i_method  (X,Y,    public,     image,                  gaussian, f32) \
    i_method  (X,Y,    public,     image,                  resize, i32, i32) \
    i_method  (X,Y,    public,     i32,                    png, path) \
    i_method  (X,Y,    public,     i32,                    exr, path) \
    i_method  (X,Y,    public,     i64,                    byte_count) \
    i_method  (X,Y,    public,     i64,                    len) \
    i_method  (X,Y,    public,     object,                 get, num) \
    i_override(X,Y,    method,     init, dealloc) \
    i_override(X,Y,    method,     copy)
declare_class(image)

#endif